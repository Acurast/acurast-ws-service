---
variables:
  NAMESPACE: "websocket-proxy"
  ANSIBLE_HOST_KEY_CHECKING: 'false'
  ANSIBLE_FORCE_COLOR: 'true'

stages:
  - build
  - test
  - publish
  - deploy

include:
  - project: "papers/acurast/acurast-infra"
    file: "/.base-gitlab-ci.yml"
  - component: gitlab.papers.tech/papers/papers-internal/ci-cd-components/build-image@v0.0.28
  - component: gitlab.papers.tech/papers/papers-internal/ci-cd-components/publish-image@v0.0.28
    inputs:
      job-suffix: development
      extends-definition: .run_dev_rules
  - component: gitlab.papers.tech/papers/papers-internal/ci-cd-components/publish-image@v0.0.28
    inputs:
      extends-definition: .run_prod_rules
      job-suffix: production
  - component: gitlab.papers.tech/papers/papers-internal/ci-cd-components/k8s-deploy@v0.0.28
    inputs:
      environment: "development/1"
      needs_config: "publish-image-development"
      reference: ".deploy-script-dev"
  - component: gitlab.papers.tech/papers/papers-internal/ci-cd-components/k8s-deploy@v0.0.28
    inputs:
      environment: "development/2"
      needs_config: "publish-image-development"
      reference: ".deploy-script-dev"
  - component: gitlab.papers.tech/papers/papers-internal/ci-cd-components/k8s-deploy@v0.0.28
    inputs:
      environment: "production/1"
      needs_config: "publish-image-production"
      reference: ".deploy-script-prod"
  - component: gitlab.papers.tech/papers/papers-internal/ci-cd-components/k8s-deploy@v0.0.28
    inputs:
      environment: "production/2"
      needs_config: "publish-image-production"
      reference: ".deploy-script-prod"

test:
  stage: test
  script:
    - echo $CI_COMMIT_BRANCH
    - docker run $GOOGLE_TAG bash -c "yarn test:ci"

.deploy-script:
  script:
    # seds
    - find k8s -type f -name \*.yaml -exec sed -i "s|__NAMESPACE_NAME__|"$NAMESPACE"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__INSTANCE_SUFFIX__|"$INSTANCE_SUFFIX"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__TO_BE_REPLACED_BY_IMAGE_TAG__|"$IMAGE_TAG"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__PEER_ID__|"$PEER_ID"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__PEER_PRIVATE_KEY__|"$PEER_PRIVATE_KEY"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__PEER_PUBLIC_KEY__|"$PEER_PUBLIC_KEY"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__PEER_DEBUG__|"$PEER_DEBUG"|g" {} +
    - find k8s -type f -name \*.yaml -exec sed -i "s|__BOOTSTRAP_PEER__|"$BOOTSTRAP_PEER"|g" {} +

    # applying the files
    - kubectl apply -f k8s/common/namespace.yaml
    - kubectl apply -f k8s/common/secret.yaml
    - kubectl apply -f k8s/$DEPLOYMENT_TYPE/ --recursive
    - kubectl apply -f k8s/common/ --recursive

.deploy-script-dev:
  extends: 
    - .run_dev_rules
    - .deploy-script
  variables:
    IMAGE_TAG: $GOOGLE_TAG_DEV
    DEPLOYMENT_TYPE: "development"

.deploy-script-prod:
  extends: 
    - .run_prod_rules
    - .deploy-script
  variables:
    IMAGE_TAG: $GOOGLE_TAG
    DEPLOYMENT_TYPE: "production"
